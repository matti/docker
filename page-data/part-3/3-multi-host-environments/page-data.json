{"componentChunkName":"component---src-templates-course-content-template-js","path":"/part-3/3-multi-host-environments","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we've mastered containers in small systems with docker-compose it's time to look beyond what the tools we practiced are capable of. In situations where we have more than a single host machine we cannot use docker-compose solely. However, Docker does contain other tools to help us with automatic deployment, scaling and management of dockerized applications."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the scope of this course, we cannot go into how to use the tools in this section, but leaving them out would be a disservice."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Docker swarm mode"}]},{"type":"text","value":" is built into docker. It turns a pool of Docker hosts into a single virtual host. You can read the feature highlights "},{"type":"element","tagName":"a","properties":{"href":"https://docs.docker.com/engine/swarm/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":". You can run right away with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"docker swarm"}]},{"type":"text","value":". Docker swarm mode is the lightest way of utilizing multiple hosts."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Docker Swarm"}]},{"type":"text","value":" (not to be "},{"type":"element","tagName":"a","properties":{"href":"https://stackoverflow.com/questions/40039031/what-is-the-difference-between-docker-swarm-and-swarm-mode","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"confused with swarm mode"}]},{"type":"text","value":") is a separate product for container orchestration on multiple hosts. It and other enterprise features were separated from Docker and sold to Mirantis late 2019. Initially, Mirantis "},{"type":"element","tagName":"a","properties":{"href":"https://www.mirantis.com/blog/mirantis-acquires-docker-enterprise-platform-business/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"announced"}]},{"type":"text","value":" that support for Docker Swarm would stop after two years. However, in the months thereafter they decided to continue supporting and developing Docker Swarm without a definitive end-date. Read more "},{"type":"element","tagName":"a","properties":{"href":"https://www.mirantis.com/blog/mirantis-will-continue-to-support-and-develop-docker-swarm/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Kubernetes"}]},{"type":"text","value":" is the de facto way of orchestrating your containers in large multi-host environments. The reason being it's customizability, large community and robust features. However the drawback is the higher learning curve compared to Docker swarms. You can read their introduction "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The main difference you should take is that the tools are at their best in different situations. In a 2-3 host environment for a hobby project the gains from Kubernetes might not be as large compared to a environment where you need to orchestrate hundreds of hosts with multiple containers each."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can get to know Kubernetes with "},{"type":"element","tagName":"a","properties":{"href":"https://k3s.io/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"k3s"}]},{"type":"text","value":" a lightweight Kubernetes distribution which you can run inside containers with "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/rancher/k3d","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"k3d"}]},{"type":"text","value":". This is a great way to get started as you don't have to worry about any credit limits."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Rather than maintaining one yourself the most common way to use Kubernetes is by using a managed service by a cloud provider. Such as Google Kubernetes Engine (GKE) or Amazon Elastic Kubernetes Service (Amazon EKS) which are both offering some credits to get started."}]},{"type":"element","tagName":"text-box","properties":{"name":"DevOps with Kubernetes","variant":"hint"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're interested in Kubernetes you should join "},{"type":"element","tagName":"a","properties":{"href":"https://devopswithkubernetes.com/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"DevOps with Kubernetes"}]},{"type":"text","value":", a free MOOC course just like this one."}]}]}]},"html":"<div><p>Now that we've mastered containers in small systems with docker-compose it's time to look beyond what the tools we practiced are capable of. In situations where we have more than a single host machine we cannot use docker-compose solely. However, Docker does contain other tools to help us with automatic deployment, scaling and management of dockerized applications.</p><p>In the scope of this course, we cannot go into how to use the tools in this section, but leaving them out would be a disservice.</p><p><strong>Docker swarm mode</strong> is built into docker. It turns a pool of Docker hosts into a single virtual host. You can read the feature highlights <a href=\"https://docs.docker.com/engine/swarm/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. You can run right away with <code class=\"language-text\">docker swarm</code>. Docker swarm mode is the lightest way of utilizing multiple hosts.</p><p><strong>Docker Swarm</strong> (not to be <a href=\"https://stackoverflow.com/questions/40039031/what-is-the-difference-between-docker-swarm-and-swarm-mode\" target=\"_blank\" rel=\"noopener noreferrer\">confused with swarm mode</a>) is a separate product for container orchestration on multiple hosts. It and other enterprise features were separated from Docker and sold to Mirantis late 2019. Initially, Mirantis <a href=\"https://www.mirantis.com/blog/mirantis-acquires-docker-enterprise-platform-business/\" target=\"_blank\" rel=\"noopener noreferrer\">announced</a> that support for Docker Swarm would stop after two years. However, in the months thereafter they decided to continue supporting and developing Docker Swarm without a definitive end-date. Read more <a href=\"https://www.mirantis.com/blog/mirantis-will-continue-to-support-and-develop-docker-swarm/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p><p><strong>Kubernetes</strong> is the de facto way of orchestrating your containers in large multi-host environments. The reason being it's customizability, large community and robust features. However the drawback is the higher learning curve compared to Docker swarms. You can read their introduction <a href=\"https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.</p><p>The main difference you should take is that the tools are at their best in different situations. In a 2-3 host environment for a hobby project the gains from Kubernetes might not be as large compared to a environment where you need to orchestrate hundreds of hosts with multiple containers each.</p><p>You can get to know Kubernetes with <a href=\"https://k3s.io/\" target=\"_blank\" rel=\"noopener noreferrer\">k3s</a> a lightweight Kubernetes distribution which you can run inside containers with <a href=\"https://github.com/rancher/k3d\" target=\"_blank\" rel=\"noopener noreferrer\">k3d</a>. This is a great way to get started as you don't have to worry about any credit limits.</p><p>Rather than maintaining one yourself the most common way to use Kubernetes is by using a managed service by a cloud provider. Such as Google Kubernetes Engine (GKE) or Amazon Elastic Kubernetes Service (Amazon EKS) which are both offering some credits to get started.</p><text-box name=\"DevOps with Kubernetes\" variant=\"hint\"><p>If you're interested in Kubernetes you should join <a href=\"https://devopswithkubernetes.com/\" target=\"_blank\" rel=\"noopener noreferrer\">DevOps with Kubernetes</a>, a free MOOC course just like this one.</p></text-box></div>","frontmatter":{"path":"/part-3/3-multi-host-environments","title":"Multi-host environments"},"fileAbsolutePath":"/Users/mpa/dev/docker-hy/data/part-3/section-3.md"},"allPages":{"edges":[{"node":{"id":"948f83e9-b338-5b95-ae2d-a7c680eadb0c","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"67016067-426f-51cc-8ea0-3e16da657b13","frontmatter":{"path":"/part-3/3-multi-host-environments","title":"Multi-host environments"}}},{"node":{"id":"bc9490fd-c9f8-5a6a-8370-2ef946d4e3fa","frontmatter":{"path":"/part-3/4-extras","title":"Extras"}}},{"node":{"id":"fe138126-ea55-51b2-a071-8a7532aa51af","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"8147ba2c-1cbf-5878-b301-ef847e624e70","frontmatter":{"path":"/part-3/2-development","title":"Development with Docker"}}},{"node":{"id":"ed0e0aae-16de-5de9-8877-77337c24124f","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"1b7ed2f7-c954-577b-ac8d-cae5f2dfc838","frontmatter":{"path":"/part-2/2-docker-networking","title":"More Docker networking"}}},{"node":{"id":"3a0a776d-ec13-50e5-ade2-6c0d549f58ba","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"ad6b1fb2-b897-54c5-8ce5-00acf0c99caf","frontmatter":{"path":"/part-2/3-wordpress","title":"Wordpress"}}},{"node":{"id":"cea7278b-6d74-539e-b105-29dc780024b6","frontmatter":{"path":"/part-1/2-running-and-stopping","title":"Running and stopping containers"}}},{"node":{"id":"83f82958-678d-500e-8ce0-a2d587fed9c1","frontmatter":{"path":"/part-1/3-in-depth-dive-to-images","title":"In-depth dive to images"}}},{"node":{"id":"087c95a9-00b7-523d-bc13-85d227b71193","frontmatter":{"path":"/part-1/7-summary","title":"Summary"}}},{"node":{"id":"d3b909df-cb77-59a6-8402-f961bd2a7aff","frontmatter":{"path":"/part-1/5-volumes-and-ports","title":"Interacting with the container via volumes and ports"}}},{"node":{"id":"e8a51e48-cc89-5f08-8c00-2c3abe47d5a9","frontmatter":{"path":"/","title":"About this course"}}},{"node":{"id":"455aef79-d091-56bd-bace-e566c89238bb","frontmatter":{"path":"/part-1/1-getting-started","title":"Definitions and basic concepts"}}},{"node":{"id":"2b806816-8c59-5a3a-9b89-da8548d44e0a","frontmatter":{"path":"/part-1/4-defining-start-conditions","title":"Defining start conditions for the container"}}},{"node":{"id":"a3fe4972-edce-5bc7-9eb5-b355fac1ebf8","frontmatter":{"path":"/part-2/1-migrating-to-docker-compose","title":"Migrating to docker compose"}}},{"node":{"id":"3447594d-f3e4-56a2-8d83-12bf7ff5f3a4","frontmatter":{"path":"/part-3/1-using-non-root-user","title":"Using a non-root user"}}}]}},"pageContext":{}},"staticQueryHashes":["3294351120","994120085"]}