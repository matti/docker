{"version":3,"sources":["webpack://ohjelmoinnin-mooc/./src/templates/CoursePartOverviewTemplate.js"],"names":["ContentWrapper","styled","Title","CoursePartOverviewTemplate","componentDidMount","loggedIn","getCachedUserDetails","userInfo","undefined","extra_fields","research","navigate","render","data","this","props","page","frontmatter","htmlAst","allPages","edges","map","o","res","node","exercises","moocfiExercises","partials","getNamedPartials","renderAst","rehypeReact","createElement","React","components","Compiler","filePath","fileAbsolutePath","substring","lastIndexOf","length","value","all","current","title","Fragment","contextType","LoginStateContext"],"mappings":"uVAoBMA,EAAiBC,oBAAH,sFAAGA,CAAH,gEASdC,EAAQD,mBAAH,6EAAGA,CAAH,MAEUE,E,sGAGbC,kB,mCAAN,0FACOC,UADP,kEAKuBC,UALvB,OAKMC,EALN,YAOmBC,KADAD,SANnB,UAMmBA,EAAUE,oBAN7B,aAMmB,EAAwBC,YAEvCC,cAAS,iBARb,2C,uDAYAC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACR,EAAiCA,EAAKG,KAA9BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,QACfC,EAAWN,EAAKM,SAASC,MAAMC,KAAI,SAACC,GAAO,IAAD,IACxCC,EAAG,UAAGD,EAAEE,YAAL,aAAG,EAAQP,YAEpB,OADAM,EAAIE,UAAJ,UAAgBH,EAAEE,YAAlB,aAAgB,EAAQE,gBACjBH,KAEHI,GAAWC,SACXC,EAAY,IAAIC,IAAJ,CAAgB,CAChCC,cAAeC,gBACfC,WAAYN,IACXO,SAEGC,EAAWtB,EAAKG,KAAKoB,iBAAiBC,UAC1CxB,EAAKG,KAAKoB,iBAAiBE,YAAY,UACvCzB,EAAKG,KAAKoB,iBAAiBG,QAE7B,OACE,gBAAC,aAAD,CACEC,MAAO,CACLC,IAAKtB,EACLuB,QAAS,CAAEzB,YAAaA,EAAakB,SAAUA,KAGjD,gBAAC,IAAD,CAAQQ,MAAO1B,EAAY0B,QAC3B,gBAAC,KAAD,KACE,gBAAC,IAAD,KACE,gBAAC,EAAAC,SAAD,KACE,gBAAC,IAAD,KACE,gBAAC5C,EAAD,KACE,gBAACE,EAAD,KAAQe,EAAY0B,OACnBd,EAAUX,U,GA/C2Bc,aAAnC7B,EACZ0C,YAAcC","file":"component---src-templates-course-part-overview-template-js-0e511f5ef4a2fe6468f9.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport rehypeReact from \"rehype-react\";\nimport { navigate } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport Layout from \"./Layout\";\n\nimport getNamedPartials from \"../partials\";\nimport { getCachedUserDetails } from \"../services/moocfi\";\nimport \"./remark.css\";\nimport PagesContext from \"../contexes/PagesContext\";\nimport LoginStateContext, {\n  LoginStateContextProvider,\n} from \"../contexes/LoginStateContext\";\nimport Container from \"../components/Container\";\n\nimport { loggedIn } from \"../services/moocfi\";\n\nconst ContentWrapper = styled.div`\n  margin-top: 1rem;\n  padding-bottom: 2rem;\n\n  p {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst Title = styled.h1``;\n\nexport default class CoursePartOverviewTemplate extends React.Component {\n  static contextType = LoginStateContext;\n\n  async componentDidMount() {\n    if (!loggedIn()) {\n      return;\n    }\n\n    let userInfo = await getCachedUserDetails();\n    const research = userInfo?.extra_fields?.research;\n    if (research === undefined) {\n      navigate(\"/missing-info\");\n    }\n  }\n\n  render() {\n    const { data } = this.props;\n    const { frontmatter, htmlAst } = data.page;\n    const allPages = data.allPages.edges.map((o) => {\n      const res = o.node?.frontmatter;\n      res.exercises = o.node?.moocfiExercises;\n      return res;\n    });\n    const partials = getNamedPartials();\n    const renderAst = new rehypeReact({\n      createElement: React.createElement,\n      components: partials,\n    }).Compiler;\n\n    const filePath = data.page.fileAbsolutePath.substring(\n      data.page.fileAbsolutePath.lastIndexOf(\"/data/\"),\n      data.page.fileAbsolutePath.length\n    );\n    return (\n      <PagesContext.Provider\n        value={{\n          all: allPages,\n          current: { frontmatter: frontmatter, filePath: filePath },\n        }}\n      >\n        <Helmet title={frontmatter.title} />\n        <LoginStateContextProvider>\n          <Layout>\n            <Fragment>\n              <Container>\n                <ContentWrapper>\n                  <Title>{frontmatter.title}</Title>\n                  {renderAst(htmlAst)}\n                </ContentWrapper>\n              </Container>\n            </Fragment>\n          </Layout>\n        </LoginStateContextProvider>\n      </PagesContext.Provider>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    page: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      html\n      frontmatter {\n        path\n        title\n      }\n      fileAbsolutePath\n    }\n    allPages: allMarkdownRemark {\n      edges {\n        node {\n          id\n          frontmatter {\n            path\n            title\n          }\n          moocfiExercises {\n            id\n            type\n            parentPagePath\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}